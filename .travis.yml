---
sudo: required

env:
  - distribution: centos
    version: 7
  - distribution: centos
    version: 6
  - distribution: ubuntu
    version: artful
  - distribution: ubuntu
    version: xenial
  - distribution: ubuntu
    version: trusty
  - distribution: debian
    version: stretch
  - distribution: debian
    version: jessie

services:
  - docker

before_install:
  - 'echo Get docker image ${distribution}:${version}.'
  - 'sudo docker pull ${distribution}:${version}'
  - 'echo Build docker image ${distribution}:${version} for use with Ansible.'
  - 'sudo docker build --no-cache --rm --file=travis/Dockerfile.${distribution}-${version} --tag=${distribution}-${version}:ansible travis'
  - 'echo List docker images'
  - 'sudo docker image ls'

script:
  - container_id=$(mktemp)
  - 'echo Create docker container from image ${distribution}-${version}:ansible.'
  - 'sudo docker run --detach --privileged -v /sys/fs/cgroup:/sys/fs/cgroup:ro -v /sys/fs/selinux:/sys/fs/selinux:ro --volume="${PWD}":/etc/ansible/roles/ansible-common:ro ${distribution}-${version}:ansible > "${container_id}"'
  - 'echo Get system facts for container ${distribution}-${version}:ansible.'
  - 'sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 ansible all -m setup'
  - 'echo Testing the roleâ€™s syntax.'
  - 'sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 ansible-playbook /etc/ansible/roles/ansible-common/travis/test.yml --syntax-check'
  - 'echo Perform a dry run.'
  - 'sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 ansible-playbook /etc/ansible/roles/ansible-common/travis/test.yml --check'
  - 'echo Run the playbook.'
  - 'sudo docker exec "$(cat ${container_id})" env DEBIAN_FRONTEND=noninteractive ANSIBLE_FORCE_COLOR=1 ansible-playbook /etc/ansible/roles/ansible-common/travis/test.yml'
  - 'echo Run the role/playbook again, checking to make sure it is idempotent.'
  - >
    sudo docker exec "$(cat ${container_id})" env DEBIAN_FRONTEND=noninteractive ANSIBLE_FORCE_COLOR=1 ansible-playbook /etc/ansible/roles/ansible-common/travis/test.yml
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)
  - 'echo Remove docker container'
  - 'sudo docker stop "$(cat ${container_id})"'
  - 'sudo docker rm -f "$(cat ${container_id})"'

notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
